name: ci

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '15 8 * * *'

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  dist-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 20.x

      - run: npm ci
      - run: npm run build

      - id: diff
        run: git diff --exit-code --color --ignore-space-at-eol --text dist/

      - if: ${{ always() && steps.diff.outcome == 'failure' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: dist
          path: dist/

  lint:
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read

    env:
      FORCE_COLOR: 1

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 20.x

      - run: npm ci
      - run: npm run lint -- --format "$GITHUB_WORKSPACE/.github/eslint-multi-formatter.mjs" -o "$RUNNER_TEMP/eslint.sarif"
      - uses: github/codeql-action/upload-sarif@ff0a06e83cb2de871e5a09832bc6a81e7276941f # v3
        if: always()
        with:
          sarif_file: ${{ runner.temp }}/eslint.sarif
          category: eslint

      - run: npm run format && git diff --color --exit-code

  codeql:
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: github/codeql-action/init@ff0a06e83cb2de871e5a09832bc6a81e7276941f # v3
        with:
          languages: javascript-typescript,actions
          config: |
            paths-ignore:
              - dist

      - uses: github/codeql-action/analyze@ff0a06e83cb2de871e5a09832bc6a81e7276941f # v3

  test:
    needs:
      - lint
      - dist-check

    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.node_id == github.event.pull_request.base.repo.node_id
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Generate branch name
        id: ref_name
        run: |
          REF_NAME="temp/test-branch-$GITHUB_RUN_ID"
          echo "ref_name=$REF_NAME" >>"$GITHUB_OUTPUT"
          echo "REF_NAME=$REF_NAME" >>"$GITHUB_ENV"

      - name: Create branch at the current GITHUB_SHA
        id: create
        uses: ./.
        with:
          ref: refs/heads/${{ steps.ref_name.outputs.ref_name }}

      - run: git fetch origin "$REF_NAME"
      - run: test "$(git rev-parse FETCH_HEAD)" = "$GITHUB_SHA"

      - name: Roll back to 6a7b6624c39c94df7690a29f46b4abd5ce03b845 (force required)
        uses: ./.
        with:
          ref: refs/heads/${{ steps.ref_name.outputs.ref_name }}
          sha: 6a7b6624c39c94df7690a29
          force: true

      - run: git fetch origin "$REF_NAME"
      - run: test "$(git rev-parse FETCH_HEAD)" = "6a7b6624c39c94df7690a29f46b4abd5ce03b845"

      - name: Try to move to the same commit
        uses: ./.
        with:
          ref: refs/heads/${{ steps.ref_name.outputs.ref_name }}
          sha: 6a7b6624c39c94df7690a29f46b4abd5ce03b845

      - run: git fetch origin "$REF_NAME"
      - run: test "$(git rev-parse FETCH_HEAD)" = "6a7b6624c39c94df7690a29f46b4abd5ce03b845"

      - name: Move back to GITHUB_SHA (fast-forward)
        uses: ./.
        with:
          ref: refs/heads/${{ steps.ref_name.outputs.ref_name }}

      - run: git fetch origin "$REF_NAME"
      - run: test "$(git rev-parse FETCH_HEAD)" = "$GITHUB_SHA"

      - name: Delete test branch
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        if: always() && steps.create.outcome == 'success'
        with:
          script: |
            await github.rest.git.deleteRef({
              owner: process.env.GITHUB_REPOSITORY_OWNER,
              repo: process.env.GITHUB_REPOSITORY.split('/')[1],
              ref: `heads/${process.env.REF_NAME}`,
            });
